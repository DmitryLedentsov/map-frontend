{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ValidationObserver, ValidationProvider, extend } from 'vee-validate';\nimport { required, min } from 'vee-validate/dist/rules';\nextend('required', {\n  ...required,\n  message: 'Поле \"{_field_}\" обязательно'\n});\nextend('min', {\n  ...min,\n  message: 'Минимум {length} символов'\n});\nexport default {\n  name: 'Login',\n  components: {\n    ValidationProvider,\n    ValidationObserver\n  },\n  data: () => ({\n    username: '',\n    password: ''\n  }),\n  methods: {\n    login() {\n      const data = new FormData();\n      data.append(\"username\", this.username);\n      data.append(\"password\", this.password);\n      this.$http.post(`login`, data).then(response => {\n        if (response.status === 200) {\n          this.$router.push('/admin-map');\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          this.$refs.observer.setErrors({\n            // username: ['Неверный логин и/или пароль'],\n            password: ['Неверный логин и/или пароль']\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidationObserver","ValidationProvider","extend","required","min","message","name","components","data","username","password","methods","login","FormData","append","$http","post","then","response","status","$router","push","catch","error","$refs","observer","setErrors"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col offset=\"0\" cols=\"12\" offset-sm=\"3\" sm=\"6\">\r\n        <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">\r\n          <validation-provider vid=\"username\" name=\"Логин\" rules=\"required|min:6\" v-slot=\"{ errors }\">\r\n            <v-text-field label=\"Логин\" v-model=\"username\" :error-messages=\"errors\" required/>\r\n          </validation-provider>\r\n          <validation-provider vid=\"password\" name=\"Пароль\" rules=\"required|min:6\" v-slot=\"{ errors }\">\r\n            <v-text-field label=\"Пароль\" v-model=\"password\" required type=\"password\" :error-messages=\"errors\"/>\r\n          </validation-provider>\r\n          <div class=\"d-flex flex-wrap mt-2\">\r\n            <v-btn color=\"primary\" @click=\"login\" :disabled=\"invalid\">Войти</v-btn>\r\n            <v-spacer></v-spacer>\r\n          </div>\r\n        </validation-observer>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport {ValidationObserver, ValidationProvider, extend} from 'vee-validate';\r\nimport {required, min} from 'vee-validate/dist/rules';\r\n\r\nextend('required', {\r\n  ...required,\r\n  message: 'Поле \"{_field_}\" обязательно'\r\n});\r\n\r\nextend('min', {\r\n  ...min,\r\n  message: 'Минимум {length} символов'\r\n});\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    ValidationProvider,\r\n    ValidationObserver\r\n  },\r\n  data: () => ({\r\n    username: '',\r\n    password: '',\r\n  }),\r\n  methods: {\r\n    login() {\r\n      const data = new FormData()\r\n      data.append(\"username\", this.username)\r\n      data.append(\"password\", this.password)\r\n      this.$http.post(`login`, data).then(response => {\r\n        if (response.status === 200) {\r\n          this.$router.push('/admin-map')\r\n        }\r\n      }).catch(error => {\r\n        if (error.response.status === 401) {\r\n          this.$refs.observer.setErrors({\r\n            // username: ['Неверный логин и/или пароль'],\r\n            password: ['Неверный логин и/или пароль']\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAsBA,SAAAA,kBAAA,EAAAC,kBAAA,EAAAC,MAAA;AACA,SAAAC,QAAA,EAAAC,GAAA;AAEAF,MAAA;EACA,GAAAC,QAAA;EACAE,OAAA;AACA;AAEAH,MAAA;EACA,GAAAE,GAAA;EACAC,OAAA;AACA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,kBAAA;IACAD;EACA;EACAQ,IAAA,EAAAA,CAAA;IACAC,QAAA;IACAC,QAAA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,MAAAJ,IAAA,OAAAK,QAAA;MACAL,IAAA,CAAAM,MAAA,kBAAAL,QAAA;MACAD,IAAA,CAAAM,MAAA,kBAAAJ,QAAA;MACA,KAAAK,KAAA,CAAAC,IAAA,UAAAR,IAAA,EAAAS,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,MAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACA,IAAAA,KAAA,CAAAL,QAAA,CAAAC,MAAA;UACA,KAAAK,KAAA,CAAAC,QAAA,CAAAC,SAAA;YACA;YACAhB,QAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}